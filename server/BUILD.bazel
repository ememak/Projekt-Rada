load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")

go_library(
    name = "go_default_library",
    srcs = [
        "main.go",
        "server_test_data.go",
    ],
    importpath = "github.com/ememak/Projekt-Rada/server",
    visibility = ["//visibility:private"],
    deps = [
        "//bsign:go_default_library",
        "//query:go_default_library",
        "//store:go_default_library",
        "@com_github_improbable-eng_grpc-web//go/grpcweb:go_default_library",
        "@io_etcd_go_bbolt//:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//grpclog:go_default_library",
        "@org_golang_google_grpc//metadata:go_default_library",
    ],
)

go_binary(
    name = "server",
    data = ["//client:prodapp"],
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

go_binary(
    name = "devserver",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

go_image(
    name = "server_image",
    data = ["//client:prodapp"],
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

container_push(
  name = "docker_container",
  format = "Docker",
  image = ":server_image",
  registry = "registry.heroku.com",
  repository = "projekt-rada/web",
)

go_test(
    name = "go_default_test",
    srcs = ["server_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//store:go_default_library",
        "@com_github_golang_protobuf//proto:go_default_library",
    ],
)
